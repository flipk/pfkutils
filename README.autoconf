
user creates:
  configure.ac
  acinclude.m4
  local macros
  Makefile.am
  acsite.m4 ?

---

run autoscan
   reads source files
   produces configure.scan
   edit configure.scan by hand to produce configure.ac

run ifnames
   takes source files
   produces list of macros used by source files
   use this list to help write configure.ac

write:
  configure.ac
  acinclude.m4
  local macros

run aclocal
  takes acinclude.m4, local macros, configure.ac
  produces aclocal.m4

write:
  Makefile.am

run automake
  takes configure.ac, Makefile.am
  creates Makefile.in

write:
  Makefile.in
  aclocal.m4
  acsite.m4

run autoconf
   takes configure.ac and aclocal.m4 acsite.m4
   produces configure
   optionally -t <macro> to trace macros,
      like AC_SUBST or AC_DEFINE or AC_DEFINE_UNQUOTED

run autoheader
   takes configure.ac and *.m4
   reads source files
   produces config.h.in

package and ship.
can run autoreconf [--install]
   runs autoconf, autoheader, aclocal, automake, libtoolize, and autopoint.
when building package:

run configure
   produces config.cache, config.log, config.status

run config.status
   takes config.h.in, Makefile.in, any other .in files
   produces config.h, Makefiles, etc.

run make

----


quick start:
 ~/amhello % cat src/Makefile.am
 bin_PROGRAMS = hello
 hello_SOURCES = main.c
 ~/amhello % cat Makefile.am
 SUBDIRS = src
 dist_doc_DATA = README
 ~/amhello % cat configure.ac
 AC_INIT([amhello], [1.0], [bug-automake@gnu.org])
 AM_INIT_AUTOMAKE([-Wall -Werror foreign])
 AC_PROG_CC
 AC_CONFIG_HEADERS([config.h])
 AC_CONFIG_FILES([
  Makefile
  src/Makefile
 ])
 AC_OUTPUT
 ~/amhello % autoreconf --install
 configure.ac: installing `./install-sh'
 configure.ac: installing `./missing'
 src/Makefile.am: installing `./depcomp'

----

regen configure.tar:

touch configure.tar
sleep 2
autoreconf -i -f -v
files=`find . -type f -newer configure.tar`
tar cf configure.tar $files
