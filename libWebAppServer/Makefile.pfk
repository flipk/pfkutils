# -*- Mode:makefile-gmake; tab-width:8 -*-

ifeq ($(PFK_BUILD_libwas),1)

LIB_TARGETS += libWebAppServer
libWebAppServer_TARGET = $(OBJDIR)/libWebAppServer.a
libWebAppServer_INCS = -Ilibpfkutil $(MBEDTLS_INCS) $(PROTOBUF_INC)
libWebAppServer_CXXSRCS = \
	libWebAppServer/WebAppConnection.cc \
	libWebAppServer/WebAppServer.cc \
	libWebAppServer/WebAppServerConfig.cc \
	libWebAppServer/WebFastCGIConnection.cc \
	libWebAppServer/WebServerConnectionBase.cc \
	libWebAppServer/WebSocketClient.cc \
	libWebAppServer/WebSocketConnection.cc \
	libWebAppServer/serverPorts.cc \
	libWebAppServer/simpleWebSocket.cc \
	libWebAppServer/simpleWebSocketClientConn.cc \
	libWebAppServer/simpleWebSocketServerConn.cc
libWebAppServer_INSTALL_HDRS = \
	libWebAppServer/CircularReader.h libWebAppServer/FastCGI.h \
	libWebAppServer/WebAppMessage.h libWebAppServer/WebAppServer.h \
	libWebAppServer/WebAppServerInternal.h \
	libWebAppServer/WebSocketClient.h libWebAppServer/serverPorts.h \
	libWebAppServer/simpleWebSocket.h
libWebAppServer_HDRS = \
	libWebAppServer/CircularReader.h libWebAppServer/FastCGI.h \
	libWebAppServer/WebAppMessage.h libWebAppServer/WebAppServer.h \
	libWebAppServer/WebAppServerInternal.h \
	libWebAppServer/WebSocketClient.h libWebAppServer/serverPorts.h \
	libWebAppServer/simpleWebSocket.h

DOXYGEN_TARGETS += libwas
libwas_DOXYFILE = libWebAppServer/Doxyfile

###################

LIBWAS_TEST_TARGETS= \
	testUrlRegex CircularReaderTest wsClientTest wsServerTest

define BUILD_LIBWAS_TEST_TARGET
PROG_TARGETS += libwas_$(t)
libwas_$(t)_TARGET = $(OBJDIR)/libWebAppServer-$(t)
libwas_$(t)_INCS = $(libWebAppServer_INCS) $(MBEDTLS_INCS)
libwas_$(t)_CXXSRCS = libWebAppServer/$(t).cc
libwas_$(t)_LIBS += -lpthread $(MBEDTLS_LIBS)
libwas_$(t)_DEPLIBS = $(libWebAppServer_TARGET) $(libpfkutil_TARGET)

endef

$(eval $(foreach t,$(LIBWAS_TEST_TARGETS),$(BUILD_LIBWAS_TEST_TARGET)))

# being fancy cuz reasons
ifeq ($(PFK_BUILD_wsproxy),1)

# if wsproxy is being built, that Makefile.pfk is already building
# the proto file we need for the test into a library. use that one.

WS_TEST_SERVER_PROTO_LIB = $(wsProxyProtos_TARGET)
WS_TEST_SERVER_PROTO_HDR = $(wsProxyProtos_libWebAppServer/proxyTcpServer/proxyMsgs.proto_HDR)

else

# if wsproxy is not being built, we need to build the proto file
# ourself, so here's a library for that.

LIB_TARGETS += simpleWsCommonProto

simpleWsCommonProto_TARGET = $(OBJDIR)/simpleWsCommonProto.a
simpleWsCommonProto_PROTOSRCS = libWebAppServer/proxyTcpServer/proxyMsgs.proto

WS_TEST_SERVER_PROTO_LIB = $(simpleWsCommonProto_TARGET)
WS_TEST_SERVER_PROTO_HDR = $(simpleWsCommonProto_libWebAppServer/proxyTcpServer/proxyMsgs.proto_HDR)

endif

PROG_TARGETS += simpleWsTestClient

simpleWsTestClient_TARGET = $(OBJDIR)/simpleWsTestClient
simpleWsTestClient_INCS = $(PROTOBUF_INC)
simpleWsTestClient_CXXSRCS = libWebAppServer/simpleWsTestClient.cc
simpleWsTestClient_DEFS = -DPROXYMSGS_PB_H=\"$(WS_TEST_SERVER_PROTO_HDR)\"
simpleWsTestClient_DEPLIBS = $(libWebAppServer_TARGET) $(libpfkutil_TARGET) $(WS_TEST_SERVER_PROTO_LIB)
simpleWsTestClient_LIBS = $(PROTOBUF_LIB) $(MBEDTLS_LIBS) -lpthread

PROG_TARGETS += simpleWsTestServer

simpleWsTestServer_TARGET = $(OBJDIR)/simpleWsTestServer
simpleWsTestServer_INCS = $(PROTOBUF_INC)
simpleWsTestServer_CXXSRCS = libWebAppServer/simpleWsTestServer.cc
simpleWsTestServer_DEFS = -DPROXYMSGS_PB_H=\"$(WS_TEST_SERVER_PROTO_HDR)\"
simpleWsTestServer_DEPLIBS = $(libWebAppServer_TARGET) $(libpfkutil_TARGET) $(WS_TEST_SERVER_PROTO_LIB)
simpleWsTestServer_LIBS = $(PROTOBUF_LIB) $(MBEDTLS_LIBS) -lpthread

endif
