#!/usr/bin/env tclsh

package require Expect

if { [llength $argv] != 1 } {
    send_user "usage:  mhssh X.Y\n"
    send_user "    where ip address is 11.1.X.Y\n"
    exit 1
}

set arg0 [lindex $argv 0]
set octets [split $arg0 "."]
set ip ""

if { [llength $octets] == 2 } {
    set ip "11.1.$arg0"
} {
    set ip $arg0
}

set good 0

spawn ping -i 1 -c 1 $ip
expect {
    "1 received" { set good 1 }
    "0 received" { set good 0 }
    -timeout 1 abort
}

if { $good == 0 } {
    send_user "cannot ping host! giving up\n"
    exit 1
}

spawn ssh-keygen -R $ip
expect eof

# useful for debug
# exp_internal 1

trap {
    set rows [stty rows]
    set cols [stty columns]
    stty rows $rows columns $cols < $spawn_out(slave,name)
} SIGWINCH

set sshpid [spawn sh -c "ssh -o \"StrictHostKeyChecking no\" -l root $ip"]

# here's a neat bug. if you have "-timeout 1 abort", and you run
# this command a hundred times, 3 or 4 times the timeout will fire
# in milliseconds. EXPECT seems to internally have a timer that fires
# peridically, and if you invoke this a microsecond before that timer,
# the supposedly-one-second timer fires in a microsecond.

expect {
    "password:"  { send "root\r" }
    "# " { }
    "$ " { }
    "% " { }
    -timeout 2 abort
}

interact

exit
