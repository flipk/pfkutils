
#
# for pci6b, change:
# - add sudo.c here (makefile.in)
# - implement sudo command (main.h.in)
# - remove itsfs/remote_ino_server.C "utimes" prototype
#

#ifdef cygwin32
PROG=	pfkutils.exe
#else
PROG=	pfkutils
#endif

all: $(PROG) ksh

HDRS=	sudo.h main_prog.h main.h 
CSRCS=	main.c 
OBJS= $(CSRCS:.c=.o)
LIBS= -lcurses -lm -lpthread -lz

DIRS=	implode tags.make tags.view ipipe2 dll2 \
	util syslog states FileBlock backup
ELIBS=	implode/libimplode.a tags.make/libmaketags.a \
	tags.view/libviewtags.a ipipe2/libi2.a util/libutil.a \
	syslog/libsyslog.a states/libstates.a \
	FileBlock/libFileBlock.a backup/libpfkbak.a

implode/libimplode.a:
	cd implode && make

tags.make/libmaketags.a:
	cd tags.make && make

tags.view/libviewtags.a:
	cd tags.view && make

ipipe2/libi2.a:
	cd ipipe2 && make

util/libutil.a:
	cd util && make

syslog/libsyslog.a:
	cd syslog && make

states/libstates.a:
	cd states && make

FileBlock/libFileBlock.a: dll2/libdll2.a
	cd FileBlock && make

backup/libpfkbak.a: FileBlock/libFileBlock.a
	cd backup && make

#ifdef freebsd
ELIBS+= qcam/libqcam.a xlock/libxlock.a 
DIRS+= qcam xlock threads
ELIBS+= 
#endif

#ifdef linux
CSRCS+=	sudo.c
ELIBS+= xlock/libxlock.a enctelgate/libetg.a teld/libteld.a
DIRS+=  xlock enctelgate teld
ELIBS+=
LIBS+= -L/usr/X11R6/lib -lX11

xlock/libxlock.a:
	cd xlock && make

enctelgate/libetg.a:
	cd enctelgate && make

teld/libteld.a:
	cd teld && make
#endif

#ifdef cygwin32
DIRS+= itsfs threads
ELIBS+= itsfs/libitsfs.a
#endif

#ifdef solaris
LIBS+= -lsocket -lnsl
CSRCS+= util/vsnprintf_stub.c
DIRS+= itsfs
ELIBS+= itsfs/libitsfs.a
#endif

#ifdef sunos
LIBS+= -ltermcap
DIRS+= itsfs
ELIBS+= itsfs/libitsfs.a 
#endif

#ifdef freebsd
CSRCS+=	sudo.c
LIBS+= -lmd -L/usr/X11R6/lib -lX11 -lXau -lXdmcp -static
#endif

CPPFLAGS= -I/usr/X11R6/include -I.

#ifdef sunos
CPPFLAGS+= -DSUNOS
#elifdef solaris
CPPFLAGS+= -DSOLARIS
#elifdef freebsd
CPPFLAGS+= -DFREEBSD
#elifdef cygwin32
CPPFLAGS+= -DCYGWIN
#elifdef linux
CPPFLAGS+= -DLINUX -Wall -Werror
#else
CPPFLAGS+=
#endif

CFLAGS= -O3 $(CPPFLAGS)

# needs to be last
ELIBS+=	dll2/libdll2.a

dll2/libdll2.a:
	cd dll2 && make

$(PROG): $(OBJS) $(ELIBS)
	g++ -o $(PROG) $(OBJS) $(ELIBS) $(LIBS)
	-rm -rf t
	-mkdir t
	-cd t && ln -s ../$(PROG) && ./$(PROG) -makelinks

.c.o:
	gcc $(CFLAGS) -c $*.c -o $*.o

.C.o:
	gcc $(CFLAGS) -c $*.C -o $*.o

ksh::
	cd pdksh-5.2.14 && make

cscope::
	find . -name '*.[chCH]' > cscope.files
	rm -f cscope.out ; cscope -b

depend: Makefile.in $(CSRCS) $(CPPSRCS) $(HDRS)
	awk 'BEGIN { copy=1; } { if ( copy ) print } /^#DEPENDENCIES/ { copy=0; }' < Makefile > x
	gcc -M $(CPPFLAGS) $(CSRCS) $(CPPSRCS) >> x
	mv x Makefile
	@for d in $(DIRS) ; do \
		echo depending in $$d ; \
		( cd $$d ; make depend ) ; \
	done

clean:
	rm -rf t
	rm -f $(OBJS) $(PROG)
	@for d in $(DIRS) ; do \
		echo cleaning in $$d ; \
		( cd $$d && make clean ) ; \
	done
	rm -f Makefile sudo.h main_prog.h *core
	rm -f pf_frontend inst myshell myshell-launcher
	rm -f cscope.files cscope.out
	cd pdksh-5.2.14 && make clean

#DEPENDENCIES
