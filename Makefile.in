
#
# for pci6b, change:
# - add sudo.c here (makefile.in)
# - implement sudo command (main.h.in)
# - remove itsfs/remote_ino_server.C "utimes" prototype
#

#ifdef cygwin32
PROG=	pkutils.exe
#else
PROG=	pkutils
#endif

HDRS=	sudo.h main_prog.h main.h 
CSRCS=	main.c 
OBJS= $(CSRCS:.c=.o)
LIBS= -lcurses -lm -lpthread -lz

DIRS= implode tags.make tags.view ipipe2 dll2 util syslog states
ELIBS= implode/libimplode.a \
	tags.make/libmaketags.a tags.view/libviewtags.a \
	ipipe2/libi2.a util/libutil.a syslog/libsyslog.a \
	states/libstates.a

#ifdef freebsd
ELIBS+= bt/libbt.a qcam/libqcam.a xlock/libxlock.a 
DIRS+= bt qcam xlock threads itsfs mytar
ELIBS+= pdksh-5.2.14/ksh.o itsfs/libitsfs.a mytar/libmytar.a
#endif

#ifdef linux
CSRCS+=	sudo.c
ELIBS+= bt/libbt.a xlock/libxlock.a
DIRS+=  bt xlock threads mytar
# ELIBS+= pdksh-5.2.14/ksh.o
ELIBS+=  mytar/libmytar.a -lX11
#endif

#ifdef cygwin32
CSRCS+=	treescan.c 
DIRS+= bt itsfs mytar threads
ELIBS+= bt/libbt.a itsfs/libitsfs.a mytar/libmytar.a
#endif

#ifdef solaris
LIBS+= -lsocket -lnsl
CSRCS+= vsnprintf_stub.c
DIRS+= itsfs bt mytar
ELIBS+= bt/libbt.a itsfs/libitsfs.a  mytar/libmytar.a
#endif

#ifdef sunos
LIBS+= -ltermcap
DIRS+= itsfs bt
ELIBS+= bt/libbt.a itsfs/libitsfs.a 
#endif

#ifdef freebsd
CSRCS+=	sudo.c
LIBS+= -lmd -L/usr/X11R6/lib -lX11 -static
#endif

CPPFLAGS= -I/usr/X11R6/include -I.

#ifdef sunos
CPPFLAGS+= -DSUNOS
#elifdef solaris
CPPFLAGS+= -DSOLARIS
#elifdef freebsd
CPPFLAGS+= -DFREEBSD
#elifdef cygwin32
CPPFLAGS+= -DCYGWIN
#elifdef linux
CPPFLAGS+= -DLINUX
#else
CPPFLAGS+=
#endif

CFLAGS= -O3 $(CPPFLAGS)

# needs to be last
ELIBS+=	dll2/libdll2.a

all: subdirs $(PROG)

$(PROG): $(OBJS) $(ELIBS)
	g++ -o $(PROG) $(OBJS) $(ELIBS) $(LIBS)
	-rm -rf t
	-mkdir t
	-cd t && ln -s ../$(PROG) && ./$(PROG) -makelinks

subdirs::
	@for d in $(DIRS) ; do \
		echo making in $$d ; \
		( cd $$d ; make ) || exit 1 ; \
	done

.c.o:
	gcc $(CFLAGS) -c $*.c

.C.o:
	gcc $(CFLAGS) -c $*.C

pdksh-5.2.14/ksh.o::
	cd pdksh-5.2.14/ && sh PK_MAKE_PDKSH


cscope::
	find . -name '*.[chCH]' > cscope.files
	rm -f cscope.out ; cscope -b

depend: Makefile.in $(CSRCS) $(CPPSRCS) $(HDRS)
	awk 'BEGIN { copy=1; } { if ( copy ) print } /^#DEPENDENCIES/ { copy=0; }' < Makefile > x
	gcc -M $(CPPFLAGS) $(CSRCS) $(CPPSRCS) >> x
	mv x Makefile
	@for d in $(DIRS) ; do \
		echo depending in $$d ; \
		( cd $$d ; make depend ) ; \
	done

clean:
	rm -rf t
	rm -f $(OBJS) $(PROG) pdksh-5.2.14/*.o
	@for d in $(DIRS) ; do \
		echo cleaning in $$d ; \
		( cd $$d && make clean ) ; \
	done
	rm -f Makefile sudo.h main_prog.h *core
	rm -f pf_frontend inst myshell myshell-launcher
	rm -f cscope.files cscope.out

#DEPENDENCIES
