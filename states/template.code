
%
% variables:
% headerfile, machine, statenamelist,
% stateprelist, statetransitions, endimpl
%

/*
 * do not edit this file!   it was autogenerated from the
 * state machine definition file @@inputfilename@@.
 * to make changes to this file,
 * please edit that file and rerun the state machine generator.
 */

#include "@@headerfile@@"

@@machine@@_STATE_MACHINE :: @@machine@@_STATE_MACHINE( char * name
            @@constructor_args@@ )
	: PK_STATE_MACHINE_BASE( name )
{
	@@constructor_code@@
}

@@machine@@_STATE_MACHINE :: ~@@machine@@_STATE_MACHINE( void )
{
	@@destructor_code@@
}

char *
@@machine@@_STATE_MACHINE :: dbg_state_name( int st )
{
	switch ( st )
	{
@@statenamelist@@
	}
	return "UNKNOWN_STATE";
}

char *
@@machine@@_STATE_MACHINE :: dbg_input_name( int in )
{
	switch ( in )
	{
@@inputnamelist@@
	}
	return "UNKNOWN_INPUT";
}

char *
@@machine@@_STATE_MACHINE :: dbg_output_name( int out )
{
	switch ( out )
	{
@@outputnamelist@@
	}
	return "UNKNOWN_OUTPUT";
}

void
@@machine@@_STATE_MACHINE :: call_pre_hooks( void )
{
	switch ( current_state )
	{
@@stateprelist@@
	}
}

bool
@@machine@@_STATE_MACHINE :: valid_input_this_state( int it )
{
	bool ret = false;
	switch ( current_state )
	{
@@validtransitions@@
	}
	return ret;
}

PK_STATE_MACHINE_BASE::transition_return
@@machine@@_STATE_MACHINE :: _transition( int it )
{
	next_state = INVALID_STATE;
	switch ( current_state )
	{
@@statetransitions@@
	}
	return TRANSITION_OK;
}

@@endimpl@@
