
i2:
 - print kbps/mbps/fractions
 - specify blocksize for I/O (for accessing disk devices directly)

ideas for FileBlock:
- client server model for accessing blocks.
- server handles get/put/alloc/free.
- client has a client-side cache. 
- no more 'block cache' 'page cache' 'page io' objects
- btree on the client side
- server only runs on linux ?
- client runs on cygwin or VC++?
- Server should only allow 1 connection initially

- Future ideas for multiple-access server?
   - Need locking API where records can be locked by a client
   - cache leases:
   - server could keep a list of all blocks cached by clients,
     and if a client changes a block, server could broadcast
     an invalidate to all clients---possibility of latency/
     corruption though.
     Client could ask the server every time it wants to access
     a block if the block is still okay to access---increases
     latency on client side, load on server, and only benefit
     is reducing traffic on the connection.
 
treesync:
  - don't have to rescan after copying a file.
  - TCP-based client server?
