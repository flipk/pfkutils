# -*- Mode:makefile-gmake; tab-width:8 -*-

PFK_USER_NAME := $(shell whoami)
PFK_USER_ID := $(shell id -u)
PFK_GROUP_ID := $(shell id -g)
UNAMES= /bin/uname /usr/bin/uname /sbin/uname /usr/sbin/uname
PFK_UNAME_PATH := $(firstword $(wildcard $(UNAMES)))
BUILD_DATE := $(shell date '+%Y-%m%d-%H%M%S')
GIT_SRC_URL := https://github.com/flipk/pfkutils

ifeq ($(WARNINGS),1)
CXXFLAGS += -Wall -Wformat=2
endif
ifeq ($(ERRORS),1)
CXXFLAGS += -Werror
endif

# install info
prefix := $(HOME)/pfk
ETCDIR := $(prefix)/etc
ETCBAKDIR := $(prefix)/etc-backup
SRCDIR := $(prefix)/src
EMACSDIR := $(ETCDIR)/emacs
ELPADIR := $(HOME)/.emacs.d/elpa/
SCRIPTS_DIR := $(prefix)/bin
INSTALL_BIN_DIR := $(prefix)/$(PFKARCH)/bin
INSTALL_LIB_DIR := $(prefix)/$(PFKARCH)/lib
INSTALL_INC_DIR := $(prefix)/include
INSTALL_MAN_DIR := $(prefix)/man
VNCDIR := $(HOME)/.vnc

##############################################

BUILD_SWITCHES = \
	pfkbak pfksh syslog checksize treescan ts2 sudo \
	ampfk pfkscript pfktop sessionmgr spinner xrandr states bglog he \
	libpfkfb diskloader pfkstat slowlink deduplifier libwas \
	libpfkthread xlock hilite do_fft protossl i3

SUBST_VARS = \
	PFK_USER_NAME PFK_USER_ID PFK_GROUP_ID PFK_UNAME_PATH prefix \
	PFK_FINDPF_GCC PFK_FINDPF_GCC_ARGS \
	$(foreach sw,$(BUILD_SWITCHES),PFK_BUILD_$(sw))

CONFIG_VALUES= \
	HAVE_NCURSES_CURSES_H HAVE_NCURSES_H HAVE_CURSES_H HAVE_DIRENT_H \
	HAVE_STRUCT_DIRENT_D_TYPE \
	HAVE_LSEEK64 HAVE_LSEEK HAVE_STRINGS_H HAVE_STRING_H \
	HAVE_STRUCT_STAT_ST_RDEV HAVE_STRUCT_STAT_ST_BLOCKS \
	HAVE_STRUCT_STAT_ST_BLKSIZE HAVE_STRUCT_STAT_ST_FLAGS \
	HAVE_STRUCT_STAT_ST_GEN HAVE_INET_ATON HAVE_INTTYPES_H \
	HAVE_PTHREAD_MUTEX_CONSISTENT_NP HAVE_PTHREAD_MUTEXATTR_SETPSHARED \
	HAVE_PTHREAD_MUTEXATTR_SETROBUST_NP \
	HAVE_PTHREAD_CONDATTR_SETPSHARED \
	HAVE_MBEDTLS_NET_H HAVE_MBEDTLS_NET_SOCKETS_H HAVE_MBEDTLS_RET_APIS

CONFIG_H= $(OBJDIR)/pfkutils_config.h

define PFK_CONFIG_LINE
	if [ "x$(PFK_CONFIG_$(value))" = "x" ] ; then \
	   echo 'plz define PFK_CONFIG_$(value) in $(CONFIG_FILE)' ; \
	   exit 1 ; \
	elif [ "$(PFK_CONFIG_$(value))" != "0" ] ; then \
	   echo \#define $(value) $(PFK_CONFIG_$(value)) >> $(CONFIG_H).tmp ; \
	fi ; 
endef

$(CONFIG_H): Makefile config/rules $(CONFIG_FILE) main/config.h.template
	$(Q)echo \#define PACKAGE_NAME \"pfkutils\" > $(CONFIG_H).tmp
	$(Q)echo \#define PACKAGE_STRING \"pfkutils 3.33\" >> $(CONFIG_H).tmp
	$(Q)$(foreach value,$(CONFIG_VALUES),$(PFK_CONFIG_LINE))
	$(Q)cat main/config.h.template >> $(CONFIG_H).tmp
	$(Q)set -e ; if [ -f $(CONFIG_H) ] ; then \
		if ! cmp -s $(CONFIG_H).tmp $(CONFIG_H) ; then \
			echo making $(CONFIG_H) ; \
			mv $(CONFIG_H).tmp $(CONFIG_H) ; \
		else \
			rm -f $(CONFIG_H).tmp ; \
		fi ; \
	else \
		echo making $(CONFIG_H) ; \
		mv $(CONFIG_H).tmp $(CONFIG_H) ; \
	fi

PFKUTIL_DIRS = \
	libpfkfb libpfkutil libpfkdll2 libprotossl \
	libWebAppServer libWebAppServer/proxyTcpServer \
	libpfkthread \
	i2 i3 misc backup hilite pfksh ampfk syslog \
	pfkscript pfktop diskloader bglog misc/states \
	xlock environ scripts fonts contrib main

PFKUTIL_MAKEFILES = $(foreach d,$(PFKUTIL_DIRS),$(d)/Makefile.pfk)

include $(PFKUTIL_MAKEFILES)

# NOTE: in this file is too late for the
# "include $(INCLUDE_MAKEFILES)" line in Makefile.inc, but
# not too late for the cscope dependency rules.
INCLUDE_MAKEFILES += $(PFKUTIL_MAKEFILES)

##############################################

PREPROC_TARGETS += $(foreach t,$(PREPROC_SOURCES),$(OBJDIR)/$(t))

define PREPROC_SUBST
$(OBJDIR)/$(file): $(file).in config/rules $(CONFIG_FILE)
	@$(foreach v,$(SUBST_VARS),\
		if [ "x$($(v))" = "x" ] ; then \
			echo 'plz set $(v) in $(CONFIG_FILE)' ; \
			exit 1; \
		fi ; ) true
	$(Q)sed $(foreach v,$(SUBST_VARS),-e 's,@$(v)@,$($(v)),') \
		< $(file).in > $(OBJDIR)/$(file).tmp
	$(Q)if ! [ -f $(OBJDIR)/$(file) ] ; then \
		echo making $(file) ; \
		mv $(OBJDIR)/$(file).tmp $(OBJDIR)/$(file) ; \
	else \
		if ! cmp -s $(OBJDIR)/$(file).tmp $(OBJDIR)/$(file) ; then \
			echo making $(file) ; \
			mv $(OBJDIR)/$(file).tmp $(OBJDIR)/$(file) ; \
		else \
			rm -f $(OBJDIR)/$(file).tmp ; \
		fi ;  \
	fi

endef

$(eval $(foreach file,$(PREPROC_SOURCES),$(PREPROC_SUBST)))

##############################################

installdirs:
	$(Q)mkdir -p $(prefix) $(ETCDIR) $(SRCDIR) $(SCRIPTS_DIR) \
		$(EMACSDIR) $(ELPADIR) $(INSTALL_BIN_DIR) \
		$(INSTALL_LIB_DIR) $(INSTALL_INC_DIR) $(VNCDIR)

diffdotfiles:
	@cd $(prefix) && diff -r etc-backup etc

# test cases :
# - touch a .c file and see if it depends and makes
# - touch a .h file and see if c files make
# - touch a .ll file and see if it makes cc, depends, and makes
# - touch a .yy file and see if it makes cc, depends, and makes
# - touch a .in file and see if preprocs
# - touch a .h.in file and see if preprocs and makes
# - touch a .c.in file and see if preprocs, depends, and makes
# - go thru config/blade enabling opt at a time and see if it builds
