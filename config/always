# -*- Mode:makefile-gmake; tab-width:8 -*-

PFK_USER_NAME := `whoami`
PFK_USER_ID := `id -u`
PFK_GROUP_ID := `id -g`
UNAMES= /bin/uname /usr/bin/uname /sbin/uname /usr/sbin/uname
PFK_UNAME_PATH := $(firstword $(wildcard $(UNAMES)))
prefix := $(HOME)/pfk
ENVIRON := $(CONFIG)
ETCDIR := $(prefix)/etc
KSHRC_LOCAL := kshrc.local.$(CONFIG)
DOT_FILES := "Xresources ctwmrc twmrc hexdump_format screenrc xinitrc xsession vnc-xstartup"
ELISP_FILES := "emacs-lone.el emacs.el go-mode.el"
SCRIPTS_DIR := $(prefix)/bin
PFK_BIN_DIR := $(prefix)/$(PFKARCH)/bin
SHELLS= /bin/bash /bin/ksh /bin/sh
SHELL_PATH := $(firstword $(wildcard $(SHELLS)))

CONFIG_VALUES= \
	HAVE_NCURSES_CURSES_H HAVE_NCURSES_H HAVE_CURSES_H HAVE_DIRENT_H \
	HAVE_STRUCT_DIRENT_D_TYPE \
	HAVE_LSEEK64 HAVE_LSEEK HAVE_STRINGS_H HAVE_STRING_H \
	HAVE_STRUCT_STAT_ST_RDEV HAVE_STRUCT_STAT_ST_BLOCKS \
	HAVE_STRUCT_STAT_ST_BLKSIZE HAVE_STRUCT_STAT_ST_FLAGS \
	HAVE_STRUCT_STAT_ST_GEN HAVE_INET_ATON HAVE_INTTYPES_H \
	HAVE_PTHREAD_MUTEX_CONSISTENT_NP HAVE_PTHREAD_MUTEXATTR_SETPSHARED \
	HAVE_PTHREAD_MUTEXATTR_SETROBUST_NP \
	HAVE_PTHREAD_CONDATTR_SETPSHARED

# this is named with a "2" to catch all those places
# i haven't converted yet. when i'm done converting,
# this should change back to pfkutils_config.h.
CONFIG_H= $(OBJDIR)/pfkutils_config2.h

define PFK_CONFIG_LINE
echo \#define $(value) $(PFK_CONFIG_$(value)) ;
endef

$(CONFIG_H): Makefile config/always config/$(CONFIG)
	$(Q)echo \#define PACKAGE_NAME \"pfkutils\" > $(CONFIG_H).tmp
	$(Q)echo \#define PACKAGE_STRING \"pfkutils\" >> $(CONFIG_H).tmp
	$(Q)($(foreach value,$(CONFIG_VALUES), \
		$(PFK_CONFIG_LINE))) >> $(CONFIG_H).tmp
	$(Q)if [ -f $(CONFIG_H) ] ; then \
		if ! cmp -s $(CONFIG_H).tmp $(CONFIG_H) ; then \
			echo making $(CONFIG_H) ; \
			mv $(CONFIG_H).tmp $(CONFIG_H) ; \
		else \
			rm -f $(CONFIG_H).tmp ; \
		fi ; \
	else \
		echo making $(CONFIG_H) ; \
		mv $(CONFIG_H).tmp $(CONFIG_H) ; \
	fi

OBJDIRS_TOMAKE= \
	libWebAppServer libpfkdll2 libpfkfb libpfkthread libpfkutil \
	ampfk backup bglog diskloader environ i2 main misc \
	pfkscript pfksh scripts syslog

objdirs:
	$(Q)mkdir -p $(OBJDIR) $(foreach d,$(OBJDIRS_TOMAKE),$(OBJDIR)/$(d))

BUILD_SWITCHES = \
	pfkbak pfksh syslog checksize treescan sudo ampfk pfkscript xrandr

SUBST_VARS = \
	PFK_USER_NAME PFK_USER_ID PFK_GROUP_ID PFK_UNAME_PATH \
	prefix ENVIRON ETCDIR KSHRC_LOCAL DOT_FILES ELISP_FILES \
	SCRIPTS_DIR PFK_BIN_DIR SHELL_PATH \
	$(foreach sw,$(BUILD_SWITCHES),PFK_BUILD_$(sw))

PREPROC_SOURCES = \
	main/programs.h environ/kshrc environ/profile \
	environ/setup-links-sh main/sudo.h scripts/cs \
	scripts/emacs-lone scripts/myemacs-cscope-helper \
	scripts/myshell-launcher scripts/myshell scripts/pf_frontend

PREPROC_TARGETS += $(foreach t,$(PREPROC_SOURCES),$(OBJDIR)/$(t))

define PREPROC_SUBST
$(OBJDIR)/$(file): $(file).in config/always config/$(CONFIG)
	$(Q)sed $(foreach v,$(SUBST_VARS),-e s,@$(v)@,$($(v)),) \
		< $(file).in > $(OBJDIR)/$(file).tmp
	$(Q)if ! [ -f $(OBJDIR)/$(file) ] ; then \
		echo making $(file) ; \
		mv $(OBJDIR)/$(file).tmp $(OBJDIR)/$(file) ; \
	else \
		if ! cmp -s $(OBJDIR)/$(file).tmp $(OBJDIR)/$(file) ; then \
			echo making $(file) ; \
			mv $(OBJDIR)/$(file).tmp $(OBJDIR)/$(file) ; \
		else \
			rm -f $(OBJDIR)/$(file).tmp ; \
		fi ;  \
	fi

endef

$(eval $(foreach file,$(PREPROC_SOURCES),$(PREPROC_SUBST)))

LIB_TARGETS += libpfkutil
libpfkutil_TARGET = $(OBJDIR)/libpfkutil.a
libpfkutil_CSRCS = \
	libpfkutil/base64.c libpfkutil/d3des.c libpfkutil/d3des_orig.c \
	libpfkutil/inet_aton.c libpfkutil/m.c libpfkutil/pk-md5.c \
	libpfkutil/printbuf.c libpfkutil/regex.c
libpfkutil_CXXSRCS = \
	libpfkutil/HSM.cc libpfkutil/LockWait.cc \
	libpfkutil/childprocessmanager.cc libpfkutil/dll3.cc \
	libpfkutil/dll3_btree.cc libpfkutil/fdThreadLauncher.cc \
	libpfkutil/fd_mgr.cc libpfkutil/hsmthread.cc \
	libpfkutil/msgr.cc libpfkutil/prioWorkQ.cc \
	libpfkutil/sha1.cc libpfkutil/shmempipe.cc \
	libpfkutil/thread_slinger.cc 
libpfkutil_HDRS = \
	libpfkutil/BackTrace.h libpfkutil/HSM.h libpfkutil/LockWait.h \
	libpfkutil/base64.h libpfkutil/bst.h libpfkutil/bufprintf.h \
	libpfkutil/childprocessmanager.h libpfkutil/circular_buffer.h \
	libpfkutil/d3des.h libpfkutil/d3des_orig.h libpfkutil/dll3.h \
	libpfkutil/dll3_btree.h libpfkutil/fdThreadLauncher.h \
	libpfkutil/fd_mgr.h libpfkutil/hsmthread.h libpfkutil/inet_aton.h \
	libpfkutil/lognew.h libpfkutil/m.h libpfkutil/msgr.h \
	libpfkutil/myTimeval.h libpfkutil/pk-md5.h libpfkutil/prioWorkQ.h \
	libpfkutil/regex.h libpfkutil/sha1.h libpfkutil/shmempipe.h \
	libpfkutil/shmempipe_test_msg.h libpfkutil/thread_slinger.h \
	libpfkutil/types.h

LIB_TARGETS += libpfkfb
libpfkfb_TARGET = $(OBJDIR)/libpfkfb.a
libpfkfb_INCS = -Ilibpfkutil -Ilibpfkdll2
libpfkfb_CXXSRCS = \
	libpfkfb/BlockCache.cc libpfkfb/Btree.cc libpfkfb/BtreeNode.cc \
	libpfkfb/FileBlockLocal.cc libpfkfb/FileBlockLocalAllocFree.cc \
	libpfkfb/FileBlockLocalAuid.cc libpfkfb/FileBlockLocalAun.cc \
	libpfkfb/FileBlockLocalBucket.cc libpfkfb/FileBlockLocalCompact.cc \
	libpfkfb/FileBlockLocalDIB.cc libpfkfb/FileBlockLocalGetRel.cc \
	libpfkfb/FileBlockLocalValidate.cc libpfkfb/FileBlock_iface.cc \
	libpfkfb/PageCache.cc libpfkfb/PageIO.cc \
	libpfkfb/PageIOFileDescriptor.cc libpfkfb/PageIONetworkTCPServer.cc \
	libpfkfb/documentation.cc
libpfkfb_HDRS = \
	libpfkfb/BlockCache.h libpfkfb/BlockCache_internal.h \
	libpfkfb/Btree.h libpfkfb/BtreeDbClasses.h \
	libpfkfb/Btree_internal.h libpfkfb/FileBlockLocal.h \
	libpfkfb/FileBlock_iface.h libpfkfb/PageCache.h \
	libpfkfb/PageCache_internal.h libpfkfb/PageIO.h

ifeq ($(PFK_BUILD_pfkbak),1)
LIB_TARGETS += libpfkbak
libpfkbak_TARGET = $(OBJDIR)/libpfkbak.a
libpfkbak_INCS = -Ilibpfkutil -Ilibpfkdll2 -Ilibpfkfb
libpfkbak_CXXSRCS = \
	backup/FileList.cc backup/create_backup.cc backup/create_file.cc \
	backup/delete_backup.cc backup/delete_gen.cc backup/delete_gens.cc \
	backup/documentation.cc backup/extract.cc backup/extract_list.cc \
	backup/find_backup.cc backup/get_info.cc backup/list_backups.cc \
	backup/list_files.cc backup/main.cc backup/md5buffer.cc \
	backup/update_backup.cc
libpfkbak_HDRS = \
	backup/FileList.h backup/database_elements.h backup/params.h \
	backup/protos.h
endif

LIB_TARGETS += libpfkdll2
libpfkdll2_TARGET = $(OBJDIR)/libpfkdll2.a
libpfkdll2_CXXSRCS = libpfkdll2/dll2_hash.cc 
libpfkdll2_HDRS = libpfkdll2/dll2.h libpfkdll2/dll2_btree.h

ifeq ($(PFK_BUILD_pfksh),1)
LIB_TARGETS += libpfksh
libpfksh_TARGET = $(OBJDIR)/libpfksh.a
libpfksh_CSRCS = \
	pfksh/alloc.c pfksh/c_ksh.c pfksh/c_sh.c pfksh/c_test.c \
	pfksh/c_ulimit.c pfksh/edit.c pfksh/emacs.c pfksh/eval.c \
	pfksh/exec.c pfksh/expr.c pfksh/history.c pfksh/io.c \
	pfksh/jobs.c pfksh/lex.c pfksh/main.c pfksh/misc.c pfksh/path.c \
	pfksh/shf.c pfksh/syn.c pfksh/table.c pfksh/trap.c pfksh/tree.c \
	pfksh/tty.c pfksh/var.c pfksh/version.c
libpfksh_CXXSRCS = \
	pfksh/xtree.cc
libpfksh_HDRS = \
	pfksh/c_test.h pfksh/config.h pfksh/edit.h pfksh/emacs-gen.sh \
	pfksh/emacs_autogen.h pfksh/expand.h pfksh/lex.h pfksh/proto.h \
	pfksh/sh.h pfksh/shf.h pfksh/siglist-gen.sh pfksh/siglist_autogen.h \
	pfksh/table.h pfksh/tree.h pfksh/tty.h
endif

LIB_TARGETS += libi2
libi2_TARGET = $(OBJDIR)/libi2.a
libi2_INCS = -Ilibpfkutil
libi2_CXXSRCS = \
	i2/ipipe_acceptor.cc i2/ipipe_connector.cc i2/ipipe_factories.cc \
	i2/ipipe_forwarder.cc i2/ipipe_main.cc i2/ipipe_rollover.cc \
	i2/ipipe_stats.cc
libi2_HDRS = \
	i2/ipipe_acceptor.h i2/ipipe_connector.h i2/ipipe_factories.h \
	i2/ipipe_forwarder.h i2/ipipe_main.h i2/ipipe_rollover.h \
	i2/ipipe_stats.h

ifeq ($(PFK_BUILD_ampfk),1)
LIB_TARGETS += libampfk
libampfk_TARGET = $(OBJDIR)/libampfk.a
libampfk_INCS = -Ilibpfkdll2 -I$(OBJDIR)/ampfk -Iampfk
libampfk_LLSRCS = ampfk/tokenizer.ll
libampfk_YYSRCS = ampfk/parser.yy
libampfk_CXXSRCS = \
	ampfk/automake_findtargets.cc ampfk/automake_ostream.cc \
	ampfk/automake_output.cc ampfk/automake_parser.cc \
	ampfk/automake_rules.cc ampfk/automake_utilities.cc \
	ampfk/automake_variables.cc ampfk/condition.cc ampfk/main.cc
libampfk_HDRS = \
	ampfk/automake_parser.h ampfk/condition.h ampfk/tokenizer.h
endif

ifeq ($(PFK_BUILD_syslog),1)
LIB_TARGETS += syslog
syslog_TARGET = $(OBJDIR)/libsyslog.a
syslog_CSRCS = \
	syslog/config_file.c syslog/process_line.c syslog/strip_chars.c \
	syslog/syslog-postprocess.c syslog/syslogd.c
syslog_HDRS = \
	syslog/config_file.h syslog/process_line.h syslog/rules.h \
	syslog/strip_chars.h

endif

ifeq ($(PFK_BUILD_pfkscript),1)
LIB_TARGETS += pfkscript
pfkscript_TARGET = $(OBJDIR)/libpfkscript.a
pfkscript_INCS = -Ilibpfkutil
pfkscript_CXXSRCS = pfkscript/logfile.cc pfkscript/main.cc pfkscript/options.cc
pfkscript_HDRS = pfkscript/logfile.h pfkscript/options.h

endif

LIB_TARGETS += diskloader
diskloader_TARGET = $(OBJDIR)/libdiskloader.a
diskloader_CXXSRCS = \
	diskloader/file_obj.cc diskloader/main.cc diskloader/pseudo_random.cc
diskloader_HDRS = \
	diskloader/file_obj.h diskloader/pseudo_random.h

LIB_TARGETS += bglog
bglog_TARGET = $(OBJDIR)/libbglog.a
bglog_CSRCS = bglog/log.c bglog/main.c
bglog_HDRS = bglog/config.h bglog/log.h

LIB_TARGETS += libWebAppServer
libWebAppServer_TARGET = $(OBJDIR)/libWebAppServer.a
libWebAppServer_INCS = -Ilibpfkutil
libWebAppServer_CXXSRCS = \
	libWebAppServer/WebAppConnection.cc \
	libWebAppServer/WebAppServer.cc \
	libWebAppServer/WebAppServerConfig.cc \
	libWebAppServer/WebFastCGIConnection.cc \
	libWebAppServer/WebServerConnectionBase.cc \
	libWebAppServer/WebSocketClient.cc \
	libWebAppServer/WebSocketConnection.cc \
	libWebAppServer/serverPorts.cc
libWebAppServer_HDRS = \
	libWebAppServer/CircularReader.h libWebAppServer/FastCGI.h \
	libWebAppServer/WebAppMessage.h libWebAppServer/WebAppServer.h \
	libWebAppServer/WebAppServerInternal.h \
	libWebAppServer/WebSocketClient.h libWebAppServer/serverPorts.h

LIB_TARGETS += libpfkthread
libpfkthread_TARGET = $(OBJDIR)/libpfkthread.a
libpfkthread_INCS = \
	-Ilibpfkthread/h -Ilibpfkthread/int -Ilibpfkdll2 -Ilibpfkutil
libpfkthread_CXXSRCS = \
	libpfkthread/pk_filedescs.cc libpfkthread/pk_filedescs_thread.cc \
	libpfkthread/pk_messages.cc libpfkthread/pk_messages_ext.cc \
	libpfkthread/pk_messages_ext_link_tcp.cc \
	libpfkthread/pk_semaphores.cc libpfkthread/pk_threads.cc \
	libpfkthread/pk_timers.cc libpfkthread/stringhash.cc
libpfkthread_HDRS = \
	libpfkthread/h/pk_semaphores.h \
	libpfkthread/h/pk_messages.h \
	libpfkthread/h/pk_filedescs.h \
	libpfkthread/h/pk_messages_ext.h \
	libpfkthread/h/pk_timers.h \
	libpfkthread/h/pk_threads.h \
	libpfkthread/h/stringhash.h \
	libpfkthread/int/pk_filedescs_internal.h \
	libpfkthread/int/pk_messages_internal.h \
	libpfkthread/int/pk_threads_internal.h \
	libpfkthread/int/pk_timers_internal.h

PROG_TARGETS += pfkutils
pfkutils_TARGET = $(OBJDIR)/pfkutils
pfkutils_INCS = -Ilibpfkutil -I$(OBJDIR)/main -Ilibpfkfb -Ilibpfkdll2
pfkutils_CSRCS = \
	main/crnl.c main/he.c main/random-hex.c main/fmtsdiff.c \
	main/genpw.c main/xtermbar.c main/waitpid.c main/pfkstat.c
ifeq ($(PFK_BUILD_sudo),1)
pfkutils_CSRCS += main/sudo.c
endif
ifeq ($(PFK_BUILD_treescan),1)
pfkutils_CSRCS += main/treescan.c
endif
ifeq ($(PFK_BUILD_checksize),1)
pfkutils_CSRCS += main/checksize.c
endif
pfkutils_CXXSRCS = \
	main/rmstar_new.cc main/sessionManager.cc main/deduplifier.cc \
	main/fbcompact.cc main/fbdump.cc main/btdump.cc \
	main/main.cc
ifeq ($(PFK_BUILD_xrandr),1)
pfkutils_CXXSRCS += main/sessionXrandr.cc 
endif
pfkutils_HDRS = \
	main/programs.h.in
pfkutils_LIBS = -lncurses -lz -lX11
ifeq ($(PFK_BUILD_xrandr),1)
pfkutils_LIBS += -lXrandr
endif
ifeq ($(PFK_BUILD_pfkscript),1)
pfkutils_LIBS += -lutil
endif
pfkutils_LIBS += -lpthread

pfkutils_DEPLIBS = \
	$(libpfksh_TARGET) $(libpfkbak_TARGET) $(libpfkfb_TARGET) \
	$(pfkscript_TARGET) $(libpfkdll2_TARGET) $(libi2_TARGET) \
	$(libampfk_TARGET) $(libpfkutil_TARGET) $(syslog_TARGET) \
	$(diskloader_TARGET) $(libWebAppServer_TARGET) $(bglog_TARGET) \
	$(libpfkthread_TARGET)

LIBPFKUTIL_TEST_TARGETS = \
	HSM_test hsmthread_test dll3_test dll3_btree_test \
	msgr-test-clnt msgr-test-msg msgr-test-svr \
	shmempipe_test_master shmempipe_test_slave

define BUILD_LIBPFKUTIL_TEST_TARGET
PROG_TARGETS += $(t)
$(t)_TARGET = $(OBJDIR)/libpfkutil/$(t)
$(t)_CXXSRCS = libpfkutil/$(t).cc
$(t)_LIBS += -lpthread
$(t)_DEPLIBS = $(libpfkutil_TARGET)

endef

$(eval $(foreach t,$(LIBPFKUTIL_TEST_TARGETS),$(BUILD_LIBPFKUTIL_TEST_TARGET)))

PROG_TARGETS += dll2_test_btree
dll2_test_btree_TARGET = $(OBJDIR)/libpfkdll2/test_btree
dll2_test_btree_CXXSRCS = libpfkdll2/test_btree.cc

PROG_TARGETS += dll2_test_hash
dll2_test_hash_TARGET = $(OBJDIR)/libpfkdll2/test_hash
dll2_test_hash_CXXSRCS = \
	libpfkdll2/test_hash.cc libpfkdll2/test_hash_add.cc \
	libpfkdll2/test_hash_del.cc
dll2_test_hash_HDRS = libpfkdll2/test_hash.h
dll2_test_hash_DEPLIBS = $(libpfkdll2_TARGET)

PROG_TARGETS += fb_testBtree
fb_testBtree_TARGET = $(OBJDIR)/libpfkfb/testBtree
fb_testBtree_INCS = $(libpfkfb_INCS)
fb_testBtree_CXXSRCS = libpfkfb/testBtree.cc
fb_testBtree_DEPLIBS = $(libpfkfb_TARGET) $(libpfkdll2_TARGET)

PROG_TARGETS += fb_testFileBlock
fb_testFileBlock_TARGET = $(OBJDIR)/libpfkfb/testFileBlock
fb_testFileBlock_INCS = $(libpfkfb_INCS)
fb_testFileBlock_CXXSRCS = libpfkfb/testFileBlock.cc
fb_testFileBlock_DEPLIBS = $(libpfkfb_TARGET) $(libpfkdll2_TARGET)

LIBWAS_TEST_TARGETS= \
	testUrlRegex CircularReaderTest wsClientTest wsServerTest

define BUILD_LIBWAS_TEST_TARGET
PROG_TARGETS += libwas_$(t)
libwas_$(t)_TARGET = $(OBJDIR)/libWebAppServer/$(t)
libwas_$(t)_INCS = $(libWebAppServer_INCS)
libwas_$(t)_CXXSRCS = libWebAppServer/$(t).cc
libwas_$(t)_LIBS += -lpthread
libwas_$(t)_DEPLIBS = $(libWebAppServer_TARGET) $(libpfkutil_TARGET)

endef

$(eval $(foreach t,$(LIBWAS_TEST_TARGETS),$(BUILD_LIBWAS_TEST_TARGET)))


LIBPFKTHR_TEST_TARGETS = \
	test-1 test-2 test-3 test-4

define BUILD_LIBPFKTHR_TEST_TARGET
PROG_TARGETS += pfkthr_$(t)
pfkthr_$(t)_TARGET = $(OBJDIR)/libpfkthread/$(t)
pfkthr_$(t)_INCS = $(libpfkthread_INCS)
pfkthr_$(t)_CXXSRCS = libpfkthread/$(t).cc
pfkthr_$(t)_LIBS += -lpthread
pfkthr_$(t)_DEPLIBS = $(libpfkthread_TARGET) $(libpfkdll2_TARGET)

endef

$(eval $(foreach t,$(LIBPFKTHR_TEST_TARGETS),$(BUILD_LIBPFKTHR_TEST_TARGET)))

# TODO : make all the $(prog)_main be subject to -DMAIN_FROM_PFKUTILS
# TODO : libWebAppServer/proxyTcpServer
# TODO : contrib/cscope-15.7a/
# TODO : contrib/ctwm-3.8a/
# TODO : misc/libprotossl/
# TODO : misc/slowlink/
# TODO : misc/states/
# TODO : try $$ to see if vars and rules macros can collapse?

# test cases :
# - touch a .c file and see if it depends and makes
# - touch a .h file and see if c files make
# - touch a .ll file and see if it makes cc, depends, and makes
# - touch a .yy file and see if it makes cc, depends, and makes
# - touch a .in file and see if preprocs
# - touch a .h.in file and see if preprocs and makes
# - touch a .c.in file and see if preprocs, depends, and makes
