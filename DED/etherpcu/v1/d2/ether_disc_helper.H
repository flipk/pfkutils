
#ifdef ETHER_PRIVATE_DATA

#if 0
{  // this brace makes the following indent nicely in emacs
#endif
    int timer_id;
    int timer_sequence;
    int last_heartbeat_ack_time;
    bool  timer_set;
    bool  has_link;
    ETHER_MAC_ADDRESS mac_received;
    ETHER_MAC_ADDRESS mac_other_mproc;
    MPROC_Thread * mproc;
    ether_list  active_macs;
 public:
    void clear_mac( void ) { mac_other_mproc = -1; }
#if 0
};
#endif


#else   /* ETHER_PRIVATE_DATA */

// note that this file is included only from the
// autogenerated ether_disc.H

#include "threads.H"
#include "ether.H"
#include "mproc.H"
#include "hsc.H"
#include "../pkutils/dll2/dll2.H"

#define ULONG unsigned int

#define ST1_MAC_CLEAN_INTERVAL    1000
#define ST4_RANDOM_VALUE         (3000+(random() % 30000))
#define ST6_TIMEOUT_VALUE         3000
#define ST7_TIMEOUT_VALUE         8000
#define ST8_HEARTBEAT_INTERVAL   10000
#define ST8_MAX_HB_TIMEOUT       30000
#define ST9_CLAIM_TIMEOUT_VALUE   5000
#define ST10_TIMEOUT_VALUE        5000
#define ST12_HEARTBEAT_TIMEOUT   60000

#define MAC_MAX_AGE_VALUE  30  /* units: 1/10 second!  revise for vxworks */

#define IML_START_MSG_INTERVAL      75
#define IML_C1_ASSERT_INTERVAL    1500

typedef int ETHER_MAC_ADDRESS;

struct ether_list_item {
    LListLinks<ether_list_item> links[1];
    ETHER_MAC_ADDRESS mac;
    ULONG timestamp;
};

typedef LList<ether_list_item,0> ether_list;

typedef struct {
    enum { C1_ASSERTION, TIMER_INDICATION,
           IML_INDICATION, BECOME_SECONDARY } type;

    // following fields are valid only for
    // type == IML_INDICATION
    eth_msg_type ether_type;
    int ether_src_mac;

    // following field valid only for TIMER_INDICATION
    int sequence_number;
} ETHER_DISC_INPUT_MSG;

class ETHER_DISC_TIMER : public Message { 
public:
    static const int TYPE = 0x6dafba2;
    ETHER_DISC_TIMER( void )
        : Message( sizeof( ETHER_DISC_TIMER ), TYPE ) { }
    int sequence_id;
};

#define iml_print mproc->iml_print
extern void mproc_iml_print( char * format, ... );
extern "C" int tickGet( void );

#endif /* ETHER_PRIVATE_DATA */
