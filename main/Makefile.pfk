# -*- Mode:makefile-gmake; tab-width:8 -*-

PFKUTILS_BRANCH = $(shell git rev-parse --abbrev-ref HEAD)
PFKUTILS_COMMIT = $(shell git rev-parse HEAD)

PFKUTILS_CONFIG_C = $(OBJDIR)/pfkutils-config.c

OBJDIRS_TOMAKE += main
PREPROC_SOURCES += main/programs.h main/sudo.h
PREPROC_TARGETS += $(PFKUTILS_CONFIG_C)

# turn config.txt into pfkutils-config.c, except for build_date,
# which changes every time and doesn't need to trigger a rebuild.
$(PFKUTILS_CONFIG_C): $(CONFIG_TXT)
	@echo 'const char pfkutils_config[] = ' > $@.new
	@sed -e s/\"//g -e s/^/\"/ -e s/$$/\\\\n\"/ \
	   -e s/-DBUILD_DATE=.*-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9][0-9][0-9]// \
	   < $< >> $@.new
	@echo ';' >> $@.new
	@if ! cmp -s $@ $@.new ; then \
		echo updating pfkutils-config.c ; \
		mv $@.new $@ ; \
	fi

PROG_TARGETS += pfkutils
pfkutils_TARGET = $(OBJDIR)/pfkutils
pfkutils_INCS = -Ilibpfkutil -I$(OBJDIR)/main \
	-Ilibpfkfb -Ilibpfkdll2 $(MBEDTLS_INCS)
pfkutils_CSRCS = \
	main/crnl.c main/random-hex.c main/fmtsdiff.c \
	main/genpw.c main/xtermbar.c main/waitpid.c \
	$(PFKUTILS_CONFIG_C)
ifeq ($(PFK_BUILD_slowlink),1)
pfkutils_CXXSRCS += main/slowlink.cc
endif
ifeq ($(PFK_BUILD_pfkstat),1)
pfkutils_CSRCS += main/pfkstat.c
endif
ifeq ($(PFK_BUILD_he),1)
pfkutils_CSRCS += main/he.c
pfkutils_LIBNCURSES= -lncurses
endif
ifeq ($(PFK_BUILD_sudo),1)
pfkutils_CSRCS += main/sudo.c
endif
ifeq ($(PFK_BUILD_treescan),1)
pfkutils_CXXSRCS += main/treescan.cc
endif
ifeq ($(PFK_BUILD_ts2),1)
pfkutils_CXXSRCS += main/ts2.cc
endif
ifeq ($(PFK_BUILD_checksize),1)
pfkutils_CSRCS += main/checksize.c
endif
ifeq ($(PFK_BUILD_deduplifier),1)
pfkutils_CXXSRCS += \
	main/dedup1.cc \
	main/dedup2.cc
endif
pfkutils_CXXSRCS += \
	main/rmstar_new.cc main/main.cc
ifeq ($(PFK_BUILD_libpfkfb),1)
pfkutils_CXXSRCS += main/fbcompact.cc main/fbdump.cc main/btdump.cc
endif
ifeq ($(PFK_BUILD_sessionmgr),1)
pfkutils_CXXSRCS += main/sessionManager.cc 
endif

ifeq ($(PFK_BUILD_spinner),1)
pfkutils_CXXSRCS += main/spinner.cc
endif

ifeq ($(PFK_BUILD_tickler),1)
pfkutils_CXXSRCS += main/tickler.cc
endif

ifeq ($(PFK_BUILD_xrandr),1)
pfkutils_CXXSRCS += main/sessionXrandr.cc 
pfkutils_LIBXRANDR= -lXrandr
pfkutils_LIBX11= -lX11
endif
ifeq ($(PFK_BUILD_do_fft),1)
PROG_TARGETS += do_fft
do_fft_TARGET = $(OBJDIR)/do_fft
do_fft_CXXSRCS = main/do_fft.cc
do_fft_LIBS = -lfftw3
do_fft_INSTALL = 1
endif
pfkutils_HDRS = \
	$(OBJDIR)/main/programs.h
pfkutils_LIBS += \
	$(pfkutils_LIBNCURSES) $(pfkutils_LIBZ) \
	$(pfkutils_LIBXRANDR) $(pfkutils_LIBX11) \
	$(pfkutils_LIBHILITE) $(pfkutils_LIBUTILS) $(pfkutils_LIBFFTW) \
	$(pfkutils_LIBPROTOBUF) $(MBEDTLS_LIBS) -lpthread -lrt
pfkutils_DEPLIBS = \
	$(libpfksh_TARGET) $(libpfkbak_TARGET) $(libpfkfb_TARGET) \
	$(pfkscript_TARGET) $(libpfkscriptutil_TARGET) \
	$(pfktop_TARGET) $(libi2_TARGET) $(libuuz_TARGET) \
	$(libampfk_TARGET) $(syslog_TARGET) \
	$(diskloader_TARGET) $(libWebAppServer_TARGET) $(bglog_TARGET) \
	$(libpfkthread_TARGET) $(states_TARGET) $(libpfkdll2_TARGET) \
	$(libi3tcp_TARGET) $(libi3udp_TARGET) $(libi3_TARGET) \
	$(pfkutils_LIBPROTOSSL) $(libpfkutil_TARGET)
pfkutils_DEFS = \
	-DPFKUTILS_BRANCH=\"$(PFKUTILS_BRANCH)\" \
	-DPFKUTILS_COMMIT=\"$(PFKUTILS_COMMIT)\" \
	-DBUILD_DATE=\"pfkutils-$(BUILD_DATE)\" \
	-DGIT_SRC_URL=\"$(GIT_SRC_URL)\"
pfkutils_INSTALL = 1

# technically this should be pfkutils_POSTINSTALL,
# but I want the 'echo' statements below to be last.
# you know, so you see them.
POSTINSTALL += pfkutils-post-install

pfkutils-post-install:
	@echo installing find-pfk-pf.c
	cp main/find-pfk-pf.c $(SRCDIR)/find-pfk-pf.c
	@echo setting up pfkutils symlinks
	$(Q)cd $(INSTALL_BIN_DIR) && ./pfkutils -dellinks
ifeq ($(PFK_BUILD_sudo),1)
	$(Q)cd $(INSTALL_BIN_DIR) && \
		if [ -f pfkutils.old ] ; then \
			ln -s pfkutils.old sudo ; \
			./sudo chown root pfkutils ; \
			./sudo chmod 4755 pfkutils ; \
		fi ; true
	@echo ""
	@echo "*** also, if not already done, perform the following as root:"
	@echo "     chown root $(INSTALL_BIN_DIR)/pfkutils"
	@echo "     chmod 4755 $(INSTALL_BIN_DIR)/pfkutils"
	@echo ""
endif
	$(Q)cd $(INSTALL_BIN_DIR) && ./pfkutils -makelinks
	$(Q)cp Makefile.inc $(prefix)


PROG_TARGETS += decode_utf8 utf16_to_utf8

decode_utf8_TARGET = $(OBJDIR)/decode_utf8
decode_utf8_CXXSRCS = main/utf8-utilities.cc
decode_utf8_DEFS = -DTEST_decode_utf8

utf16_to_utf8_TARGET = $(OBJDIR)/utf16_to_utf8
utf16_to_utf8_CXXSRCS = main/utf8-utilities.cc
utf16_to_utf8_DEFS = -DTEST_utf16_to_utf8

POSTINSTALL += utf8_post_install

utf8_post_install:
	@echo installing decode_utf8 utf16_to_utf8
	cp $(decode_utf8_TARGET) $(utf16_to_utf8_TARGET) $(INSTALL_BIN_DIR)

ifeq ($(PFK_CONFIG_DISABLE_MAKELINKS),)
# note cygwin doesn't support this, so it is disabled on cygwin.
POSTALL += pfkutils-makelinks

pfkutils-makelinks: $(pfkutils_TARGET)
	@echo making pfkutils program links in $(OBJDIR)/bin
	$(Q)cd $(OBJDIR) && rm -rf bin && mkdir bin && cd bin && \
		ln -s ../pfkutils && ./pfkutils -makelinks
endif
