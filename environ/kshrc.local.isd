
#FUNCTIONS: lsv lsco sv zeroversion makeorig ccdiff ccdiff2 

mips=/vobs/sb/ti_sip_linux/tools/mipsel-linux-uclibc/bin
ti=/vobs/sb/ti_sip_linux
vend=/vob/wibb_vendor/Beceem
Drv=$vend/Source/Drv/Source
Lib=$vend/Source/Lib/BeceemWiMAX
cpe=/vob/wibb_cpe

alias ti='cd $ti'
alias abs='cd /vob/wibb_cpe/src/abs_layer/src'
alias vend='cd $vend'
alias drv='cd $Drv'
alias lib='cd $Lib'
alias q='ssh qcomm.cig.mot.com'

xvt() {
    grep -v ^Vtree ~/.xclearcase > ~/zzz.xclearcase
    cat > ~/.xclearcase << EOF
Vtree.width: 1169
Vtree.height: 979
Vtree.x: 1
Vtree.y: 1
EOF
    cat ~/zzz.xclearcase >>  ~/.xclearcase
    rm -f ~/zzz.xclearcase
    xlsvtree $*
}

xcs() {
    # cscope in an xterm
    export CSCOPE_IN_XTERM=1
    xterm -geometry 140x40+0+0 -title CSCOPE -e cs $* &
    unset CSCOPE_IN_XTERM
}

export LESS='-S -n -e -j 5 -c -d -h 5 -i -M -q -x 4'
export XLESS='-j5 -c -d -h 5 -i -M -q -x 4'

uname_s=`uname -s`
for dir in /apps/public/gcc_3.3/sparc-sun-solaris2.8/lib /apps/public/gcc/sparc-sun-solaris2.9/lib ; do
    if [[ -d $dir ]] ; then
        if [[ x$LD_LIBRARY_PATH = x ]] ; then
            LD_LIBRARY_PATH=$dir
        else
            LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$dir
        fi
    fi
done
export LD_LIBRARY_PATH

if [[ $uname_s = "Linux" ]] ; then
	stty erase 0x7f
fi
unset uname_s

lsv() {
        typeset prefix
        if [[ $# -eq 0 ]] ; then
                prefix=pknaack1_
        else
                prefix=$1
        fi
        ct lsview ${prefix}* | cut -c3- | awk '{print $1}'
}

lsvp() {
    ct lsview wmx-cpe\*$1\* | cut -c3- | awk '{print $1}'
}

lsco() {
     ct lsco -cview -avobs -short
}

sv() {
    ct setview $1
}

zeroversion() {
    ct ls $1 | 
     sed \
        -e 's,^\(.*\)  *Rule.*$,\1,'     \
        -e 's,^\(.*\)  *from.*$,\1,'     \
        -e 's,^\(.*/\).*$,\1,'          \
        -e 's,$,0,'
}

makeorig() {
    for f in $* ; do
        zv=`zeroversion $f`
        rm -f $f.orig
        echo $zv
        cp $zv $f.orig
    done
}

myscript() {
    logfile=$1
    shift
    MY_INSCRIPT=$HOME/$HOST.myscript.$$
    export MY_INSCRIPT
    echo rm -f $MY_INSCRIPT > $MY_INSCRIPT
    echo echo myscript started at `date` >> $MY_INSCRIPT
    echo "$@" >> $MY_INSCRIPT
    echo echo myscript done at `date` >> $MY_INSCRIPT
    script $logfile
    unset MY_INSCRIPT
}

if [[ x$MY_INSCRIPT != x ]] ; then
    local_inscript=$MY_INSCRIPT
    unset MY_INSCRIPT
    sh $local_inscript
    rm -f $local_inscript
    exit 0
fi

ccdiff() {
    typeset file_arg
    typeset opts
    typeset ofile

    if [[ x$1 == x+g ]] ; then
        graphical=no
        shift
    else
        graphical=yes
    fi

    file_arg=$1
    shift
    opts=$1

    ofile=`zeroversion $file_arg`

    if [[ $graphical == no ]] ; then
        sd $file_arg $ofile
    else
        xsd $file_arg $ofile
    fi
}

ccdiff2() {
    typeset file_arg
    typeset opts
    typeset ofile

    if [[ x$1 == x+g ]] ; then
        graphical=no
        shift
    else
        graphical=yes
    fi

    file_arg=$1
    shift
    opts=$1

    ofile=`zeroversion $file_arg`

    if [[ $graphical == no ]] ; then
        sd2 $file_arg $ofile
    else
        xsd2 $file_arg $ofile
    fi
}

# always make sure my /home/$USER/bin is the first
# element of the path.
if [[ x${PATH#/home/${USER}/bin} == x$PATH ]] ; then
    __verbose fixing up busted path
    PATHhead=${PATH%:/home/${USER}*}
    PATHtail=${PATH#*${USER}/bin:*}
    PATH=/home/$USER/bin:$PATHhead:$PATHtail
    unset PATHhead
    unset PATHtail
    export PATH
fi

if [[ "x$DISPLAY" = "x" && "x$SSH_CONNECTION" != x ]] ; then
    DISPLAY=${SSH_CONNECTION%% *}:0
    export DISPLAY
fi
